# -*- coding: utf-8 -*-
"""Untitled10.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/11IyrqZQkWi1_kgiOaaco4dW-ZJtqN5bJ
"""

import streamlit as st
import yfinance as yf
import pandas as pd
import matplotlib.pyplot as plt

st.set_page_config(page_title="Coffee Arbitrage Dashboard", layout="wide")

st.title("â˜• Coffee Market - Cash and Carry Arbitrage Monitor")

# Sidebar config
st.sidebar.header("Parameters")
discount_percent = st.sidebar.slider("Assumed Spot Discount vs Futures (%)", 0.0, 10.0, 3.0)
carry_cost_percent = st.sidebar.slider("Monthly Carrying Cost (%)", 0.0, 5.0, 1.0)
alert_threshold = st.sidebar.slider("Alert if Arbitrage Spread Exceeds ($)", 0.0, 5.0, 1.0)

# Load futures price from Yahoo Finance
st.subheader("ðŸ“ˆ Coffee Futures Price (KC=F)")
data = yf.download("KC=F", period="6mo", interval="1d")
st.line_chart(data['Close'])

# Estimate spot price
data['Spot Price'] = data['Close'] * (1 - discount_percent / 100)
data['Carrying Cost'] = data['Spot Price'] * (carry_cost_percent / 100)
data['Theoretical Futures'] = data['Spot Price'] + data['Carrying Cost']
data['Arbitrage Spread'] = data['Close'].squeeze() - data['Theoretical Futures'].squeeze()

# Show alert if spread exceeds threshold
latest_spread = data['Arbitrage Spread'].iloc[-1]
if latest_spread > alert_threshold:
    st.warning(f"ðŸš¨ Arbitrage Opportunity Detected! Spread = ${latest_spread:.2f}")
else:
    st.success(f"âœ… No arbitrage opportunity currently. Spread = ${latest_spread:.2f}")

# Show data table
st.subheader("ðŸ“Š Arbitrage Table")
st.dataframe(data.tail(10)[['Close', 'Spot Price', 'Carrying Cost', 'Theoretical Futures', 'Arbitrage Spread']])

# Plot spread
st.subheader("ðŸ“‰ Arbitrage Spread (Futures - Theoretical)")
st.line_chart(data['Arbitrage Spread'])

# Optional: Show Z-score
st.subheader("ðŸ§  Z-Score of Arbitrage Spread (Historical Mean Reversion Signal)")
mean = data['Arbitrage Spread'].mean()
std = data['Arbitrage Spread'].std()
data['Z-score'] = (data['Arbitrage Spread'] - mean) / std
st.line_chart(data['Z-score'])

# Add note
st.markdown("""
This dashboard estimates arbitrage opportunities using a simple cash-and-carry model.
For actual trading, use verified spot data and account for real-world execution, fees, and contract roll risks.
""")
!streamlit run coffee_arbitrage_dashboard.py

